{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/shared/custom-select/style.css","webpack:///./src/app/app.component.html","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/shared/custom-select/custom-select.component.ts","webpack:///./src/app/validator-message.directive.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 139\n// module chunks = 1","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".btn-group-justified {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n}\\n\\n.btn-group-justified .btn:first-child {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  text-align: left;\\n}\\n\\n.btn-group-justified .dropdown-menu {\\n  width: 100%;\\n}\\n.btn-group-justified .dropdown-item{\\n  cursor: pointer;\\n}\\n.btn-group-justified .dropdown-item.active{\\n  cursor: default;\\n}\\n.btn-group-justified .dropdown-item:active {\\n  background: transparent;\\n  color: inherit;\\n}\\n.btn-group-justified .dropdown-item:focus{\\n  outline:none !important;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/custom-select/style.css\n// module id = 140\n// module chunks = 1","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <form novalidate [formGroup]=\\\"signUpForm\\\" (submit)=\\\"submitForm($event);\\\">\\n    <div class=\\\"form-group\\\">\\n      <label>User Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"user_name\\\">\\n    </div>\\n    <validator-message [field]=\\\"signUpForm.get('user_name')\\\"></validator-message>\\n\\n    <fieldset formGroupName=\\\"address\\\">\\n      <legend>Address</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Country</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"country\\\">\\n          </div>\\n          <validator-message [field]=\\\"signUpForm.get('address').get('country')\\\"></validator-message>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>City</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"city\\\">\\n          </div>\\n          <validator-message [field]=\\\"signUpForm.get('address').get('city')\\\"></validator-message>\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <fieldset formArrayName=\\\"contacts\\\">\\n      <legend>Contacts</legend>\\n      <div class=\\\"form-group\\\" *ngFor=\\\"let contact of contacts.controls; let i = index\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-3\\\">\\n            <custom-select [options]=\\\"contactTypes\\\" [formControl]=\\\"contact.controls['type']\\\"></custom-select>\\n          </div>\\n          <div class=\\\"col-md-8\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" [formControl]=\\\"contact.controls['value']\\\">\\n            <br>\\n            <validator-message [field]=\\\"contact.controls['value']\\\"></validator-message>\\n          </div>\\n          <div class=\\\"col-md-1\\\">\\n            <button class=\\\"btn btn-danger btn-block\\\" type=\\\"button\\\" (click)=\\\"removeContact(i);\\\">X</button>\\n          </div>\\n        </div>\\n      </div>\\n      <validator-message [field]=\\\"signUpForm.get('contacts')\\\"></validator-message>\\n\\n      <div class=\\\"clearfix text-right\\\">\\n        <button class=\\\"btn btn-info\\\" type=\\\"button\\\" (click)=\\\"addContact();\\\">Add new</button>\\n      </div>\\n    </fieldset>\\n\\n    <fieldset formGroupName=\\\"passwords\\\">\\n      <legend>Password</legend>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Type password</label>\\n            <input type=\\\"password\\\" formControlName=\\\"pwd\\\" class=\\\"form-control\\\">\\n          </div>\\n          <validator-message [field]=\\\"signUpForm.get('passwords').get('pwd')\\\"></validator-message>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Confirm password</label>\\n            <input type=\\\"password\\\" formControlName=\\\"confirm\\\" class=\\\"form-control\\\">\\n          </div>\\n          <validator-message [field]=\\\"signUpForm.get('passwords').get('confirm')\\\"></validator-message>\\n        </div>\\n        <div class=\\\"col-md-12\\\">\\n          <br>\\n          <validator-message [field]=\\\"signUpForm.get('passwords')\\\"></validator-message>\\n        </div>\\n      </div>\\n    </fieldset>\\n\\n    <div class=\\\"clearfix text-right\\\">\\n      <button class=\\\"btn btn-success btn-lg\\\" type=\\\"submit\\\">Submit</button>\\n    </div>\\n  </form>\\n\\n  <div *ngIf=\\\"userData\\\">\\n    <hr>\\n    <h3>Ok, you can send this data to server.</h3>\\n    <pre>{{userData|json:2}}</pre>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 142\n// module chunks = 1","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 74;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 74\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component, OnInit } from '@angular/core';\nimport {\n  AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, ValidatorFn,\n  Validators\n} from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public signUpForm: FormGroup = null;\n  public userData: any = null;\n\n  public contactTypes: { value: string, title: string, validators?: ValidatorFn[] }[] = [\n    {value: 'phone', title: 'Phone', validators: [this.phoneValidator(), Validators.required]},\n    {value: 'e-mail', title: 'E-mail', validators: [Validators.email, Validators.required]},\n    {value: 'skype', title: 'Skype', validators: [Validators.required, this.skypeLoginValidator()]}\n  ];\n\n  private getContactValidatorsByType(type: string): ValidatorFn[] {\n    return this.contactTypes.filter((el: any) => el.value === type)[0].validators;\n  }\n\n  constructor(private fb: FormBuilder) {\n    const pwdValidators: ValidatorFn[] = [Validators.required, Validators.minLength(6), Validators.maxLength(20)];\n\n    this.signUpForm = fb.group({\n      user_name: ['', [Validators.required, this.userNameValidator()]],\n      address: fb.group({\n        country: ['', [Validators.minLength(2), Validators.maxLength(50), Validators.required]],\n        city: ['', [Validators.minLength(2), Validators.maxLength(50), Validators.required]]\n      }),\n      contacts: fb.array([], this.contactsLenValidator()),\n      passwords: fb.group({\n        pwd: ['', pwdValidators],\n        confirm: ['', pwdValidators]\n      }, {validator: this.passwordsAreEqual()})\n    });\n  }\n\n  public get contacts(): FormArray {\n    return <FormArray>this.signUpForm.get('contacts');\n  }\n\n  // methods for contact manipulation\n  public addContact(): void {\n    const newItemType = this.contactTypes[0].value;\n    (<FormArray>this.signUpForm.get('contacts')).push(\n      this.fb.group({\n        type: [newItemType, Validators.required],\n        value: ['', this.getContactValidatorsByType(newItemType)]\n      })\n    );\n\n    const contactControls = this.signUpForm.get('contacts')['controls'];\n    const currentContactGroup = contactControls[contactControls.length - 1];\n\n    currentContactGroup.get('type').valueChanges.subscribe((type: string) => {\n      const valueCtrl: FormControl = currentContactGroup.get('value');\n      valueCtrl.setValidators(this.getContactValidatorsByType(type));\n      valueCtrl.updateValueAndValidity();\n    });\n  }\n\n  public removeContact(i: number): void {\n    (<FormArray>this.signUpForm.get('contacts')).removeAt(i);\n  }\n\n  // end methods for contact manipulation\n\n\n  // custom validators\n  private contactsLenValidator(): ValidatorFn {\n    return (contacts: FormArray): { [key: string]: any } => {\n      if (contacts.length !== 0) {\n        return null;\n      }\n      return {\n        custom: 'At least one contact info should be added'\n      };\n    };\n  }\n\n  private passwordsAreEqual(): ValidatorFn {\n    console.log('here');\n\n    return (group: FormGroup): { [key: string]: any } => {\n      if (!(group.dirty || group.touched) || group.get('pwd').value === group.get('confirm').value) {\n        return null;\n      }\n      return {\n        custom: 'Passwords are not equal'\n      };\n    };\n  }\n\n  private skypeLoginValidator(): ValidatorFn {\n    const pattern: RegExp = /^[a-z][a-z0-9\\.,\\-_]{5,31}$/i;\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!(control.dirty || control.touched)) {\n        return null;\n      } else {\n        return pattern.test(control.value) ? null : {custom: `Invalid skype login`};\n      }\n    };\n  }\n\n  private phoneValidator(): ValidatorFn {\n    const pattern: RegExp = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im;\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!(control.dirty || control.touched)) {\n        return null;\n      } else {\n        return pattern.test(control.value) ? null : {custom: `Invalid phone number`};\n      }\n    };\n  }\n\n  private userNameValidator(): ValidatorFn {\n    const pattern: RegExp = /^[\\w\\.\\$@\\*\\!]{5,30}$/;\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!(control.dirty || control.touched)) {\n        return null;\n      } else {\n        return pattern.test(control.value) ? null : {custom: `Min length:5, can't contain whitespaces & special symbols.`};\n      }\n    };\n  }\n\n  // end custom validators\n\n\n  ngOnInit() {\n    this.addContact();\n    // clear user data, if form invalid\n    this.signUpForm.statusChanges.subscribe((status) => {\n      if (status === 'INVALID' && !!this.userData) {\n        this.userData = null;\n      }\n    });\n  }\n\n  private markControlsAsTouched(form) {\n    for (let control in form.controls) {\n      form.controls[control].markAsTouched();\n      if (form.controls[control].controls) {\n        this.markControlsAsTouched(form.controls[control]);\n      }\n    }\n  }\n\n  // submit form method\n  public submitForm(e: Event) {\n    e.preventDefault();\n\n    console.log(this.signUpForm);\n    if (this.signUpForm.invalid) {\n      this.markControlsAsTouched(this.signUpForm);\n      return false;\n    }\n\n    this.userData = this.signUpForm.value;\n    // todo: send data to server\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { ValidatorMessageComponent } from './validator-message.directive';\nimport { CustomSelectComponent } from './shared/custom-select/custom-select.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ValidatorMessageComponent,\n    CustomSelectComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\ninterface selectOption {\n  title: string;\n  value: string\n}\n\n@Component({\n  selector: 'custom-select',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CustomSelectComponent),\n      multi: true,\n    }\n  ],\n  template: `\n    <div class=\"btn-group btn-group-justified\" [ngClass]=\"{'show':isOpen}\">\n      <button type=\"button\" class=\"btn btn-secondary\">{{ placeholder }}</button>\n      <button type=\"button\" class=\"btn btn-secondary dropdown-toggle dropdown-toggle-split\" (click)=\"toggleOpen();\">\n        <span class=\"sr-only\">Toggle Dropdown</span>\n      </button>\n      <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <button\n          type=\"button\"\n          class=\"dropdown-item\"\n          *ngFor=\"let option of options\"\n          [ngClass]=\"{'active':option.value === value}\"\n          (click)=\"optionSelect(option);\">\n          {{option.title}}\n        </button>\n        <div class=\"dropdown-item\" *ngIf=\"!options.length\">No items for select</div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['style.css']\n})\nexport class CustomSelectComponent implements ControlValueAccessor {\n  @Input() options: selectOption[] = [];\n\n  selectedOption: selectOption;\n  get placeholder():string{\n    return this.selectedOption && this.selectedOption.hasOwnProperty('title') ? this.selectedOption.title : 'Select';\n  }\n\n  open: boolean = false;\n\n  optionSelect(option: selectOption) {\n    this.writeValue(option.value);\n    this.onTouched();\n    this.open = false;\n  }\n\n  toggleOpen() {\n    this.open = !this.open;\n  }\n\n  get isOpen(): boolean {\n    return this.open;\n  }\n\n  writeValue(value) {\n    if (!value || typeof value !== 'string') {\n      return\n    }\n    const selectedEl = this.options.find(el => el.value === value);\n    if (selectedEl) {\n      this.selectedOption = selectedEl;\n      this.onChange(this.selectedOption.value);\n    }\n  }\n\n  onChange: any = () => {\n  };\n  onTouched: any = () => {\n  };\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/custom-select/custom-select.component.ts","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'validator-message',\n  template: `\n    <div class=\"alert alert-danger\" *ngIf=\"field.invalid && field.touched && validatorMessages?.length\">\n      <li *ngFor=\"let errMsg of validatorMessages\"> {{errMsg}}</li>\n    </div>\n  `\n})\nexport class ValidatorMessageComponent {\n  @Input() field: FormControl;\n\n  public get validatorMessages() {\n    const field = this.field;\n    if (!field || !field.errors) {\n      return false;\n    }\n    const errors = [];\n    const config = {\n      required: 'Field is required',\n      requiredTrue: 'Value should be positive',\n      email: 'Field should contain e-mail',\n      pattern: 'Field does not match to pattern'\n    };\n\n    if (field.errors.hasOwnProperty('custom')) {\n      config['custom'] = (typeof field.errors.custom === 'string' && field.errors.custom.length) ?\n        field.errors.custom :\n        'Does not match to format';\n    }\n\n    if (field.errors.hasOwnProperty('minlength')) {\n      config['minlength'] = `Minimum length ${ field.errors.minlength.requiredLength}`;\n    }\n    if (field.errors.hasOwnProperty('maxlength')) {\n      config['maxlength'] = `Maximum length ${ field.errors.maxlength.requiredLength}`;\n    }\n\n    Object.keys(field.errors).forEach((error: string) => {\n      errors.push(config[error]);\n    });\n\n    return errors;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/validator-message.directive.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}